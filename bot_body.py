from keyboards import generate_calendar_button

from aiogram import Dispatcher, executor, Bot
from aiogram.types import Message, CallbackQuery

from aiogram_calendar import simple_cal_callback, SimpleCalendar

import os
from dotenv import load_dotenv

import datetime
from datetime import timezone

load_dotenv()

bot = Bot(token=os.getenv('TOKEN'))
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def command_start(message: Message):
    await message.answer(
        text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–ª—è –±—Ä–æ–Ω–∏ –∫–æ–º–Ω–∞—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É',
        reply_markup=generate_calendar_button()
    )


@dp.message_handler(lambda message: '–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É üìÜ' in message.text)
async def call_calendar(message: Message):
    """–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º <–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É> """
    await message.answer(
        text="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –¥–∞—Ç—É: ",
        reply_markup=await SimpleCalendar().start_calendar()
    )


@dp.callback_query_handler(simple_cal_callback.filter())
async def select_date_day(call: CallbackQuery, callback_data: dict):
    """–†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏—è –¥–∞—Ç—ã"""
    selected, date = await SimpleCalendar().process_selection(call, callback_data)
    year, month, day = date.strftime("%Y %m %d").split()
    dt = datetime.datetime(int(year), int(month), int(day))
    unix_time = int(dt.replace(tzinfo=timezone.utc).timestamp())

    if selected:
        """–ï—Å–ª–∏ –¥–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞"""
        await call.message.answer(
            text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–∞—Ç—É: {date.strftime("%d/%m/%Y")}, '
                 f'\n–î–ª—è —É–¥–æ–±–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ –î–ë –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ UnixTime: {unix_time}',
            reply_markup=generate_calendar_button()
        )
    else:
        """–ï—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞"""
        await bot.delete_message(
            chat_id=call.from_user.id,
            message_id=call.message.message_id  # –ó–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        )
        await call.message.answer(
            text='–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –¥–∞—Ç—É',
            reply_markup=generate_calendar_button()  # –ó–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        )


if __name__ == '__main__':
    executor.start_polling(dp)
